var documenterSearchIndex = {"docs":
[{"location":"#GenomicDiversity.jl","page":"GenomicDiversity.jl","title":"GenomicDiversity.jl","text":"","category":"section"},{"location":"","page":"GenomicDiversity.jl","title":"GenomicDiversity.jl","text":"Documentation for GenomicDiversity.jl","category":"page"},{"location":"#Functions","page":"GenomicDiversity.jl","title":"Functions","text":"","category":"section"},{"location":"","page":"GenomicDiversity.jl","title":"GenomicDiversity.jl","text":"Modules = [GenomicDiversity]","category":"page"},{"location":"#GenomicDiversity.chooseChrRegion-Tuple{Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.chooseChrRegion","text":"chooseChrRegion(pos, chr; positionMin=1, positionMax=NaN)\n\nDesignate a specific region of a chromosome for subsequent analysis.\n\n​# Arguments\n\npos: A matrix containing genomic location of each locus; must have a chrom column (name of scaffold) and a position column (numerical position on scaffold).\nchr: The name of the chosen scaffold.\npositionMin: Optional (default 1); the starting location of the chosen region.\npositionMax: Optional (default the end of the scaffold); the ending location of the chosen region.\n\nNotes\n\nReturns a tuple containing:\n\nthe scaffold name.\nthe minimum position.\nthe maximum position.\na string describing the region (e.g. chr Z: 20000 to 1000000)\n\nThis function does not actually filter the genotype matrix–that can be done by providing the output of this to functions such as plotGenotypeByIndividual().\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getDxy-Tuple{Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getDxy","text":"getDxy(freqs, groupsToCalc)\n\nCalculate per-locus Dxy (pi_between) for each pair of populations.\n\nArguments\n\nfreqs: Matrix containing alternate allele frequencies for each group (row) and SNP (column).\ngroupsToCalc: Vector containing the names of the groups corresponding to each row of freqs.\n\nNotes\n\nReturns a tuple containing: \n\nMatrix of Dxy values for each comparison (row) and locus (column).\nVector of comparison names.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getFreqsAndSampleSizes-Tuple{Any, Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getFreqsAndSampleSizes","text":"getFreqsAndSampleSizes(genoData, indGroup, groupsToCalc)\n\nCalculate allele frequencies and sample sizes for each group and SNP.\n\n​# Arguments\n\ngenoData: The genotype matrix, where rows are individuals and columns are loci, with genotype codes 0,1,2 meaning homozygous reference, heterozygote, homozygous alternate, and missing genotypes can be either -1 or missing.\nindGroup: A vector providing the group name each individual belongs to.\ngroupsToCalc: A list of group names to include in calculations.\n\nNotes\n\nReturns a tuple containing 1) a matrix of frequencies, and 2) a matrix of samples sizes (in both, rows are groups and columns are loci). \n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getFst-Tuple{Any, Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getFst","text":"getFst(freqs, sampleSizes, groupsToCalc; among=false)\n\nCalculate Fst for each locus, between pairs of groups and (optionally) among all groups. \n\nFst is calculated according to Weir & Cockerham (1984), including their correction for sample size and number of groups.\n\n​# Arguments\n\nfreqs: Matrix containing alternate allele frequencies for each group (row) and SNP (column).\nsampleSizes: Matrix containing sample sizes for each group (row) and SNP (column).\ngroupsToCalc: The list of group names.\namong: Optional argument–set to \"true\" to also calculate Fst among all groups.\n\nNotes\n\nReturns a tuple containing: \n\nMatrix of Fst values for each comparison (row) and locus (column).\nMatrix of numerator values from the Fst calculation for each comparison (row) and locus (column).\nMatrix of denominator values from the Fst calculation for each comparison (row) and locus (column).\nVector of comparison names.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getPairwiseNames-Tuple{Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getPairwiseNames","text":"getPairwiseNames(groupsToCalc)::Vector{String}\n\nUsing a list of names, return a list of paired names in format \"name1_name2\".\n\n​# Arguments\n\ngroupsToCalc: The list of names.\n\nNotes\n\nReturns a vector of paired names.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getRegionDxy-Tuple{Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getRegionDxy","text":"getRegionDxy(siteDxyMatrix)\n\nGiven a matrix representing per-population-pair (rows) per-site (columns) Dxy values (within-group nucleotide diversity), produce a vector containing the mean Dxy for each population pair.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getRegionPi-Tuple{Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getRegionPi","text":"getRegionPi(sitePiMatrix)\n\nGiven a matrix representing per-group (rows) per-site (columns) Pi values (within-group nucleotide diversity), produce a vector containing the mean pi for each group.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getRollingMean-Tuple{Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getRollingMean","text":"getRollingMean(inputVector, windowSize)\n\nCalculate non-overlapping windowed arithmetic average (i.e., means) from a vector of numeric values.\n\n​# Arguments\n\ninputVector: A vector of numeric values (can include NaN).\nwindowSize: An integer indicating the window number of values to include in each mean.\n\nNotes\n\nReturns a vector of windowed means. \nIn the calculations, NaN values are ignored.\nIf all values in a window are NaN, then the mean is NaN.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getSitePi-Tuple{Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getSitePi","text":"getSitePi(freqs, sampleSizes)\n\nCalculate non-biased nucleotide diversity (pi) at each site for each population, with correction for sample size, using allele freqs and sample size as input.\n\n​# Arguments\n\nfreqs: Matrix containing alternate allele frequencies for each group (row) and SNP (column).\nsampleSizes: Matrix containing sample sizes for each group (row) and SNP (column).\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getVarWindowedIndHet-Tuple{Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getVarWindowedIndHet","text":"getVarWindowedIndHet(windowedIndHet_standardized)\n\nCalculate the windowed variance in standardized individual heterozygosity. \n\n​# Arguments\n\nwindowedIndHet_standardized: The matrix of standardized individual windowed heterozygosity values (rows are individuals; columns represent windowed genomic regions)\n\nNotes\n\nReturns a vector of variances in standardized individual heterozygosities (each value corresponds to a different windowed genomic region).  \n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getWindowBoundaries-Tuple{Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getWindowBoundaries","text":"getWindowBoundaries(lociVector, windowSize)\n\nDetermine the start and end scaffold positions for each window along a single scaffold. \n\n​# Arguments\n\nlociVector: Vector of included locus positions along a scaffold.\nwindowSize: Size of each window (in number of loci).\n\nNotes\n\nreturns a Matrix, where rows represent windows and columns are starting location and ending location of each window along the scaffold. \n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getWindowedFst-NTuple{4, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getWindowedFst","text":"getWindowedFst(FstNumerator, FstDenominator, pos, windowSize)\n\nCalculate windowed Fst along chromosomal regions, uses output from each site's Fst (produced by the getFst() function). \n\nThis is calculated according to Weir&Cockerham1984 (with sample size and pop number correction), calculated as windowed numerator over windowed denominator, in whole windows starting on left side of the region.\n\n​# Arguments\n\nFstNumerator: Produced by the getFst() function, this is a vector of the Fst numerator values for each locus. \nFstDenominator: Produced by the getFst() function, this is a vector of the Fst denominator values for each locus. \npos: Matrix providing genomic location of each locus; there must be a position column.\nwindowSize: An integer indicating the window number of values to include in each mean.\n\nNotes\n\nreturns a tuple of two vectors: rolling mean position, and rolling mean Fst\nthe calculations ignore NaN values (which would be in both numerator and denominator)\nreturns NaN for a window if there are no real values in the window \n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.getWindowedIndHet-Tuple{Any, Any, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.getWindowedIndHet","text":"getWindowedIndHet(genotypes, pos, windowSize)\n\nCalculate windowed heterozygosity for each individual, across a genomic region.\n\n​# Arguments\n\ngenotypes: The genotype matrix, where rows are individuals and columns are loci, with genotype codes 0,1,2 meaning homozygous reference, heterozygote, homozygous alternate, and missing genotypes can be either -1 or missing.\npos: A matrix containing genomic location of each locus; must have a position column (numerical position on scaffold). \nwindowSize: An integer indicating the number of loci to include in each mean.\n\nNotes\n\nReturns a tuple containing 1) a vector of windowed mean positions, and 2) a matrix of windowed heterozgyosity values (rows are individuals and columns are loci). \n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.greet_GenomicDiversity-Tuple{}","page":"GenomicDiversity.jl","title":"GenomicDiversity.greet_GenomicDiversity","text":"greet_GenomicDiversity()\n\nA simple function for testing that the module has loaded.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.limitIndsToPlot-NTuple{4, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.limitIndsToPlot","text":"limitIndsToPlot(plotGroups, numIndsToPlot, genoData, indMetadata)\n\nSelect a subset of individuals, based on numbers within each group, for subsequent analysis.\n\n​# Arguments\n\nplotGroups: Vector of names of groups to include.\nnumIndsToPlot: Vector of maximum number of individuals to include from each group (order as in plotGroups).\ngenoData: Matrix of genotypes (rows are individuals, columns are loci).\nindMetadata: Matrix containing metadata for individuals (make sure there is an Fst_group column).\nsortByMissing: Set to true to choose individuals with the least missing data among these loci.\n\nNotes\n\nReturns a tuple containing:\n\nMatrix of genotypes for included individuals.\nMatrix of metadata for included individuals.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.plotGenomeFst-NTuple{6, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.plotGenomeFst","text":"plotGenomeFst(scaffolds_to_plot, \n                windowed_Fst_all,\n                pairwiseNamesFst,\n                windowed_pos_all,\n                groupsToPlotFst,\n                groupColorsFst;\n                lineTransparency = 0.8,\n                fillTransparency = 0.2,\n                figureSize = (1200, 1200))\n\nPlot windowed Fst along chromosomal regions, for multiple population comparisons.\n\n​# Arguments\n\nscaffolds_to_plot: a vector of the scaffold names to include in the plot.\nwindowed_Fst_all: a matrix of Fst values (rows representing different population comparisons; columns different genomic regions).\npairwiseNamesFst: a vector of names indicating the pairs of populations in rows of windowed_Fst_all.\nwindowed_pos_all: dataframe containing genomic locations of windows (must have columns chrom and mean_position).\ngroupsToPlotFst: a vector of strings indicating the population comparisons to include.\ngroupColorsFst: the colors to use to plot the comparisons in groupsToPlotFst\nlineTransparency (optional): transparency of the lines\nfillTransparency (optional): transparency of the fill color\nfigureSize (optional): size of the figure (hight, width)\n\nNotes\n\nReturns the figure.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.plotGenotypeByIndividual-NTuple{7, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.plotGenotypeByIndividual","text":"plotGenotypeByIndividual(regionInfo, pos, genoData, \n                            indMetadata, freqs,\n                            plotGroups, plotGroupColors;\n                            missingFractionAllowed = 1.0,\n                            colorAllelesByGroup = true, group1 = plotGroups[1],\n                            indFontSize=10, figureSize=(1200, 1200),\n                            show_SNP_density = true, densityPlotColor = :steelblue1,\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\nConstruct a genotype-by-individual plot, with option to filter out SNPs with too much missing data. \n\nUnder the default setting, alleles are colored (dark purple vs. light purple) according to whichever allele is designated as group1. \n\n​# Arguments\n\nregionInfo: Information regarding the scaffold and region of focus; a tuple provided by chooseChrRegion().\npos: Matrix providing genomic location of each locus; there must be a chrom column and a position column.\ngenoData: Matrix containing genotype data (individuals in rows, loci in columns).\nindMetadata: Matrix of metadata for individuals; must contain Fst_group and plot_order columns.\nfreqs: Matrix of alternate allele frequencies for each group (row) and locus (column).\nplotGroups: Vector of group names to include in plot.\nplotGroupColors: Vector of plotting colors corresponding to the groups.\nmissingFractionAllowed: Optional; The maximum missing genotype fraction for a locus to be included (default is 1.0, so no filtering).\ncolorAllelesByGroup: Optional; set to false to color alleles according to reference and alternate.\ngroup1: Optional (default is plotGroups[1]); when colorAllelesByGroup is true, this is the group that determine which allele is dark purple. \nindFontSize: Optional; the font size of the individual ID labels.\nfigureSize: Optional; the size of the figure; default is (1200, 1200).  \nshow_SNP_density: Optional; default is true to show a density plot. \ndensityPlotColor: Optional; default is :steelblue1\nplotTitle: Optional; default will make a title. For no title, set to \"\".\nindColorLeftProvided: Optional; Default is false. Set to true if there is a column labeled indColorLeft in the metadata providing color of each individual for plotting on left side.\nindColorRightProvided: Optional; same as above but for right side (requires indColorRight column in metadata).\n\nNotes\n\nReturns a tuple containing:\n\nthe figure\nthe plotted genotypes\nthe numerical positions (in the chosen scaffold) of the plotted loci\nthe sorted metadata matrix for the plotted individuals\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.plotGenotypeByIndividualWithFst-NTuple{12, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.plotGenotypeByIndividualWithFst","text":"plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n                        regionInfo, pos, Fst, pairwiseNamesFst,\n                        genoData, indMetadata, freqs, plotGroups, plotGroupColors;\n                        colorAllelesByGroup=true, group1=plotGroups[1])\n\nConstruct a genotype-by-individual plot, including only loci that pass thresholds for Fst and missing data. \n\nUnder the default setting, alleles are colored (dark purple vs. light purple) according to whichever allele is designated as group1. \n\n​# Arguments\n\ngroupsToCompare: The two groups (in format name1_name2) for filtering loci based on Fst. This can be a single string, or a vector of strings, each with a population comparison to include if Fst is above Fst_cutoff.\nFst_cutoff: The minimum Fst for a locus to be included in the plot.\nmissingFractionAllowed: The maximum missing genotype fraction for a locus to be included.\nregionInfo: Information regarding the scaffold and region of focus; a tuple provided by chooseChrRegion().\npos: Matrix providing genomic location of each locus; there must be a chrom column and a position column.\nFst: Matrix of Fst values; can be produced by getFst().\npairwiseNamesFst: Vector of pairwise names corresponding to rows in the Fst matrix.\ngenoData: Matrix containing genotype data (individuals in rows, loci in columns).\nindMetadata: Matrix of metadata for individuals; must contain Fst_group and plot_order columns.\nfreqs: Matrix of alternate allele frequencies for each group (row) and locus (column).\nplotGroups: Vector of group names to include in plot.\nplotGroupColors: Vector of plotting colors corresponding to the groups.\ncolorAllelesByGroup: Optional; set to false to color alleles according to reference and alternate.\ngroup1: Optional (default is plotGroups[1]); when colorAllelesByGroup is true, this is the group that determine which allele is dark purple. \nindFontSize: Optional; the font size of the individual ID labels.\nfigureSize: Optional; the size of the figure; default is (1200, 1200).  \nshow_SNP_density: Optional; default is true to show a density plot. \ndensityPlotColor: Optional; default is :steelblue1\nplotTitle: Optional; default will make a title. For no title, set to \"\".\nhighlightRegionStarts: Optional; the left locations of regions to highlight on the scaffold.\nhighlightRegionEnds: Optional; the right locations of regions to highlight on the scaffold. \nhighlightRegionColor: Optional; default red; the color of the highlight bar along the scaffold\n\nNotes\n\nReturns a tuple containing:\n\nthe figure\nthe plotted genotypes\nthe numerical positions (in the chosen scaffold) of the plotted loci\nthe sorted metadata matrix for the plotted individuals\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.plotPCA-NTuple{4, Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.plotPCA","text":"plotPCA(genotypes, ind_with_metadata, groups_to_plot_PCA, group_colors_PCA; sampleSet = \"\", regionText=\"\", flip1 = false, flip2 = false)\n\nDo a principal components analysis based on genotypes of individuals (colored by group), and display PC1 vs. PC2.\n\n​# Arguments\n\ngenotypes: Genotype matrix (individuals in rows, loci in columns, with no missing data–can impute prior to this, to ensure no missing).\nindMetadata: Matrix containing metadata for individuals (make sure there is an Fst_group` column).\ngroups_to_plot_PCA: Vector of names of groups to include.\ngroup_colors_PCA: Vector listing plotting color for each each group.\n\nOptional arguments:\n\nsampleSet: Name of the sample set to appear in the plot title.\nregionText: Name of the genomic region to appear in the plot title.\nflip1: Set to true if wanting to flip PC1 (i.e., multiply by -1).\nflip2: Same but for PC2.\nshowPlot: Set to false if not wanting the function to draw display.\nautolimitaspect_setting: For unconstrained axes, set to nothing (default is 1 for 1:1 axes).\nlineOpacity: Opacity of the line color of symbols.\nfillOpacity: Opacity of the fill color of symbols.\nsymbolSize: Size of symbols.\nplotTitle: Specify if a specific title is wanted; otherwise will fill in a title.\nshowTitle: Set to false for no title. \nxLabelText: Can choose an x axis label.\nyLabelText: Can choose a y axis label.\nlabelSize: Size of x and y axis labels.\n\nNotes\n\nReturns a tuple containing:\n\nmodel: the PCA model.\nmetadata: the metadata of individuals included in the PCA.\nvalues: PC values of individuals (before any flipping of axes).\nPC1: PC1 values of individuals(after any flipping).\nPC2: PC2 values of individuals (after any flipping).\nPCAfig: The PCA figure.\n\n\n\n\n\n","category":"method"},{"location":"#GenomicDiversity.standardizeIndHet-Tuple{Any}","page":"GenomicDiversity.jl","title":"GenomicDiversity.standardizeIndHet","text":"standardizeIndHet(windowedIndHet)\n\nDivide each individual's windowed heterozgyosity by the average heterozygosity of all individuals (at each window).\n\n​# Arguments\n\nwindowedIndHet: The matrix of individual windowed heterozygosity values (rows are individuals; columns represent windowed genomic regions)\n\nNotes\n\nReturns a matrix of standardized individual windowed heterozygosities.  \n\n\n\n\n\n","category":"method"}]
}
